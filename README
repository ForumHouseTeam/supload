.. -*- mode: rst -*-

What is ``supload``?
--------------------

It's simple script for upload file to cloud storage based on
`OpenStack Swift API <http://docs.openstack.org/trunk/openstack-object-storage/developer/content/>`_.


Feature
-------

* recursive upload
* check files by MD5 hash
* upload only modified files
* expiring files


Restrictions
------------
* support only less than 5G file to upload


Installation
------------

For use script need installed utilities ``curl`` and ``file``.
Install for debian/ubuntu::

    $ apt-get install curl file

Get script::

    $ wget https://raw.github.com/selectel/supload/master/supload.sh && chmod +x supload.sh
    # or
    $ curl -Ok https://raw.github.com/selectel/supload/master/supload.sh && chmod +x supload.sh

You may move script to /usr/bin or /usr/local/bin if want::

    $ mv supload.sh /usr/local/bin/supload


Usage
-----

By default the script work with Selectel Cloud Storage.

Get help::

    $ ./supload.sh

Upload one file, file will be uploaded if not existence in storage or
local file is different from file in storage (md5 check)::

    $ ./supload.sh -u USERNAME -k USERKEY storage_dir local_file.path

Upload all files in directory recursive (option ``-r``)::

    $ ./supload.sh -u USRNAME -k USERKEY -r storage_dir local_dir/

Force upload without checking existing files in storage by md5 (option ``-M``)::

    $ ./supload.sh -u USERNAME -k USERKEY -r -M storage_dir local_dir/

If the Storage supports expiring object you can set time when uploaded file must be deleted (option ``-d``). Uploaded file will be deleted after 7 days::

    $ ./supload.sh -u USERNAME -k USERKEY -d 7d storage_dir file.doc


Changes
-------

2.1:

* add support for expiring files
* util file not necessarily now


2.0:

* ignore case for auth headers
* support MacOsX
* small fixes
